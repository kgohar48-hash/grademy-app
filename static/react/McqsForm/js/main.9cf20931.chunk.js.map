{"version":3,"sources":["components/McqsForm.js","App.js","reportWebVitals.js","index.js"],"names":["initialValues","subject","chapter","questions","choices","answer","onSubmit","values","console","log","addQuestions","data","a","config","headers","axios","post","Yup","submittedBy","required","Youtube","className","action","method","htmlFor","as","name","id","defaultValue","value","cols","placeholder","fieldArrayProps","push","remove","form","map","question","index","type","onClick","width","height","viewBox","fill","xmlns","d","fillRule","rows","choice","choiceIndex","ans","answerIndex","i","length","row","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf20931.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Formik , Form, Field, FieldArray} from 'formik'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\n\r\nconst initialValues = {\r\n    subject : '',\r\n    chapter : '',\r\n    questions : [\r\n        { choices : ['','','',''] , answer : ['']}\r\n    ]\r\n}\r\nconst  onSubmit = values  =>{\r\n    console.log('Form data : ', values)\r\n    addQuestions(values)\r\n}\r\n\r\nasync function addQuestions (data){\r\n    const config = {\r\n      headers:{\r\n        'Content-type':'application/json  '\r\n      }\r\n    }\r\n    try {\r\n      const res =  await axios.post('/newmcqs/test',data,config)\r\n    } catch (err) {\r\n      console.log(\"error here : \",err)\r\n    }\r\n    \r\n  }\r\n \r\n\r\nconst validationSchema = Yup.object({\r\n    submittedBy : Yup.string().required('submittedBy required'),\r\n    subject : Yup.string().required('subject required'),\r\n    chapter : Yup.string().required('Channeeel name required')\r\n\r\n})\r\n\r\nfunction Youtube() {\r\n\r\n    // console.log('Visited',formik.touched)\r\n    return (\r\n        <Formik initialValues={initialValues}  onSubmit={onSubmit}>\r\n            <Form className = 'mt-4' action=\"/newmcqs/test\" method=\"POST\">\r\n                <div className=\"input-group mb-3 mt-4 mr-4 col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Subject</label>\r\n                    </div>\r\n                    <Field as='select' name=\"subject\" className=\"custom-select\" id=\"inputGroupSelect01\" required>\r\n                        <option defaultValue>Choose...</option>\r\n                        <option value=\"math\">Math</option>\r\n                        <option value=\"physics\">Physics</option>\r\n                        <option value=\"chemistry\">Chemistry</option>\r\n                        <option value=\"biology\">biology</option>\r\n                        <option value=\"english\">English</option>\r\n                        <option value=\"intelligence\">Intelligence</option>\r\n                    </Field>\r\n                </div>\r\n                \r\n                <div className=\"input-group mb-3 ml-3 mr-4\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Chapter</label>\r\n                    </div>\r\n                    <Field  name=\"chapter\"  className=\"input-group-text\" id=\"inputGroupSelect01\" required>\r\n                    </Field>\r\n                </div>\r\n                <div className=\" input-group-prepend col-md-6 mb-3 mt-3 \"  >\r\n                    <label className=\"input-group-text \" htmlFor=\"question\">Description</label>\r\n                    <Field as='textarea'  cols=\"68\" name='description' className=\"form-control \" placeholder='Type quiz description ...' required />\r\n                </div>\r\n                <div className='card mt-3 mb-3'>\r\n                    <div className='card-body'>\r\n                        <div className='form-controls'>\r\n                        <FieldArray name='questions'>\r\n                            {\r\n                                (fieldArrayProps)=>{\r\n                                    const {push,remove,form} = fieldArrayProps\r\n                                    const {questions} = form.values\r\n                                    return (\r\n                                        <div>\r\n                                            {questions.map((question , index)=>\r\n                                                <div className='card mt-3 mb-3' key={index}>\r\n                                                    <div className='card-header'>\r\n                                                        <h1>Question : {index + 1}</h1>\r\n                                                        {index > -1 ? <button className='btn btn-danger float-right float-bottom btn-sm ml-3' type='button' onClick={()=>remove(index)}> <svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                                            <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                                        </svg> </button> : null}\r\n                                                        <div className=\"bs-example\">\r\n                                                            {/* <Field type=\"text\" name={`questions[${index}].tags`} placeholder='tags'  data-role=\"tagsinput\" /> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='card-body'>\r\n                                                        <div className=\" input-group-prepend col-md-12 mb-3 mt-3 \"  >\r\n                                                            <label className=\"input-group-text \" htmlFor=\"question\">Question</label>\r\n                                                            <Field as='textarea' rows=\"4\" cols=\"68\" name={`questions[${index}].question`} className=\"form-control \" placeholder='Type questions here ...' required />\r\n                                                        </div>\r\n                                                        <FieldArray name={`questions[${index}].choices`}>\r\n                                                            {\r\n                                                                (fieldArrayProps)=>{\r\n                                                                    const {push,remove,form} = fieldArrayProps\r\n                                                                    const {questions} = form.values\r\n                                                                    return(\r\n                                                                        <div>\r\n                                                                            <div className='row' >\r\n                                                                                {questions[index].choices.map((choice,choiceIndex)=>\r\n                                                                                    <div key={choiceIndex}  className=\" input-group-prepend col-md-6 mb-3 mt-3 choice\" >\r\n                                                                                        <label className=\"input-group-text\" htmlFor=\"choice1\">{`Choice ${choiceIndex + 1}`}</label>\r\n                                                                                        <Field as='textarea' cols=\"35\" className=\"form-control \" name={`questions[${index}].choices[${choiceIndex}]`} placeholder={`Choice ${choiceIndex + 1}`} required />\r\n                                                                                        <button className='btn btn-danger btn-sm ml-4' type='button' onClick={()=>remove(choiceIndex)}> <svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/><path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/></svg> </button>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                            <div className=\"input-group-prepend mt-3\">\r\n                                                                                <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Add Choice</label>\r\n                                                                                <button type='button'  className='btn btn-success btn-sm'  onClick={()=>push('')}> + </button>\r\n                                                                                \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        </FieldArray>\r\n                                                    </div>\r\n                                                    <div className='card-footer'>\r\n                                                    <FieldArray name={`questions[${index}].answer`}>\r\n                                                            {\r\n                                                                (fieldArrayProps)=>{\r\n                                                                    const {push,remove,form} = fieldArrayProps\r\n                                                                    const {questions} = form.values\r\n                                                                    return(\r\n                                                                        <div>\r\n                                                                            <div className='row'>\r\n                                                                                {questions[index].answer.map((ans,answerIndex)=>\r\n                                                                                    <div >\r\n                                                                                        <div key={answerIndex}  className=\"input-group-prepend col-md-12 mb-3 mt-3 choice\">\r\n                                                                                            <div className=\"input-group-prepend\">\r\n                                                                                                <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">{`Ans ${answerIndex + 1}`}</label>\r\n                                                                                            </div>\r\n                                                                                            <Field as='select' name={`questions[${index}].answer[${answerIndex}]`} className=\"custom-select\" id=\"inputGroupSelect01\" required>\r\n                                                                                                {questions[index].choices.map((choice,i)=>\r\n                                                                                                    <option key={i+100}  value={`${i + 1}`} defaultValue >{` ${i + 1}`}</option>\r\n                                                                                                )}\r\n                                                                                            </Field>\r\n                                                                                            <button className='btn btn-danger btn-sm ml-4' type='button' onClick={()=>remove(answerIndex)}> <svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/><path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/></svg> </button>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                            <div className=\"input-group-prepend mt-3 ml-3 mb-3\">\r\n                                                                                <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Choose multiple correct options</label>\r\n                                                                                {questions[index].choices.length > questions[index].answer.length ?  <button type='button'  className='btn btn-success btn-sm'  onClick={()=>push('')}> + </button> : null}\r\n                                                                               \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        </FieldArray>\r\n                                                       \r\n                                                        <div className=\"form-label col-md-5 mb-3\">\r\n                                                            <label className=\"input-group-text\" htmlFor=\"solution\">Solution explanation </label>\r\n                                                            <Field as='textarea' cols=\"55\" row='4' className='form-control'  name={`questions[${index}].solution`} placeholder='solution'  />                                                       \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            <div className=\"input-group-prepend mt-3\">\r\n                                                <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Add question</label>\r\n                                                <button type='button'  className='btn btn-success btn-sm '  onClick={()=>push( { choices : ['','','',''] , answer : ['']})}> + </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n                        </FieldArray>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-primary mb-5'>Submit</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Youtube\r\n","import React from 'react'\nimport './index.css';\nimport YoutubeForm from './components/McqsForm'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <YoutubeForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}